definitions:
  api.JSONProductInput:
    properties:
      imgpath:
        type: string
      name:
        type: string
    type: object
  api.JSONProductOutput:
    properties:
      _id:
        type: string
      name:
        type: string
    type: object
  api.JSONUserInput:
    properties:
      bio:
        type: string
      email:
        type: string
      location:
        type: string
      name:
        type: string
      password:
        type: string
      photoPath:
        type: string
    type: object
  api.JSONUserOutput:
    properties:
      bio:
        type: string
      createdAt:
        type: string
      email:
        type: string
      followers:
        items:
          $ref: '#/definitions/api.JSONUserOutput'
        type: array
      id:
        type: string
      lastSeenAt:
        type: string
      location:
        type: string
      name:
        type: string
      photoPath:
        type: string
      products:
        items:
          $ref: '#/definitions/api.JSONProductOutput'
        type: array
      rating:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /api/products:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/api.JSONProductOutput'
              type: array
            type: array
      summary: returns all products stored in db
      tags:
      - Products
    post:
      consumes:
      - application/json
      parameters:
      - description: Product data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/api.JSONProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
      summary: creates a new product and inserts it into DB
      tags:
      - Products
  /api/products/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id of the product
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: success
      summary: deletes a product from db
      tags:
      - Products
    get:
      parameters:
      - description: id of the product
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.JSONProductOutput'
      summary: returns product by the specified id
      tags:
      - Products
  /api/products/image/{id}:
    post:
      consumes:
      - image/jpeg
      - image/png
      parameters:
      - description: id of the product
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: success
      summary: accepts an image and stores it in DB
      tags:
      - Products
  /api/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/api.JSONUserOutput'
              type: array
            type: array
      summary: returns all users stored in db
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/api.JSONUserInput'
      responses:
        "200":
          description: success
      summary: creates a new user and inserts it into DB
      tags:
      - Users
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: success
      summary: deletes a user from db
      tags:
      - Users
    get:
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
      summary: retrieves user from db by id
      tags:
      - Users
  /api/users/image/{id}:
    post:
      consumes:
      - image/jpeg
      - image/png
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: success
      summary: accepts an image and stores it in DB
      tags:
      - Users
swagger: "2.0"
